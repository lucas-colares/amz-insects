scale_linetype(labels=fantasy_names)+
theme_minimal()+
scale_y_continuous(labels = c(0,10,100),breaks = c(0,1,2))+
#guides(color="none",fill="none",color="none",shape="none")+
scale_shape_manual(values=c(21,22,23,24,25,8,13),labels=fantasy_names)+
labs(x="Proportion of forest",y="Number of individuals",color="Biological\ngroup",fill="Biological\ngroup",shape="Biological\ngroup",linetype="Biological\ngroup")+
theme(legend.justification = "top",strip.text = element_text(size=12,family="sans",face = "bold",hjust = 0,vjust = 0.5),strip.background = element_rect(fill="transparent",color="transparent"), legend.text.align = 0,legend.title.align=0,legend.position = "none", legend.background = element_rect(fill="NA", colour = "NA"), legend.title = element_text(face="bold", family = "sans", colour = "black", size=12), legend.text = element_text(family ="sans", size=10), axis.text = element_text(family = "sans", colour = "black", size=12), axis.title = element_text(face="bold",family = "sans", size = 14));AbunOrdPlt1
AbunOrdPlt2<-ggplot()+
geom_point(data=plt_data1,aes(x=Area,y=log10(Abun+1),color=Taxa,fill=Taxa,shape=Taxa))+
geom_smooth(data=plt_data1,aes(x=Area,y=log10(Abun+1),color=Taxa),method = "glm",method.args=list(family="quasipoisson"))+
facet_wrap(.~Taxa,scales = "free_y",nrow = 1)+
scale_color_manual(values=my_cols[5:7],labels=fantasy_names[5:7])+
scale_fill_manual(values=my_cols[5:7],labels=fantasy_names[5:7])+
scale_linetype(labels=fantasy_names[5:7])+
theme_minimal()+
scale_y_continuous(labels = c(0,10,100),breaks = c(0,1,2))+
#guides(color="none",fill="none",color="none",shape="none")+
scale_shape_manual(values=c(25,8,13),labels=fantasy_names)+
labs(x="Proportion of forest",y="Number of individuals",color="Biological\ngroup",fill="Biological\ngroup",shape="Biological\ngroup",linetype="Biological\ngroup")+
theme(legend.justification = "top",strip.text = element_text(size=12,family="sans",face = "bold",hjust = 0,vjust = 0.5),strip.background = element_rect(fill="transparent",color="transparent"), legend.text.align = 0,legend.title.align=0,legend.position = "none", legend.background = element_rect(fill="NA", colour = "NA"), legend.title = element_text(face="bold", family = "sans", colour = "black", size=12), legend.text = element_text(family ="sans", size=10), axis.text = element_text(family = "sans", colour = "black", size=12), axis.title = element_text(face="bold",family = "sans", size = 14));AbunOrdPlt2
#### Taxon-specific (Body size) ----
# Phylogenetic tree according to http://dx.doi.org/10.1126/science.1257570
(insects$xmax-insects$xmin)*(insects$ymax-insects$ymin)->insects$body_area
cat("(((((((Brachycera:0.2,Nematocera:0.2):0.2,", "Trichoptera:0.4):0.2,Coleoptera:0.6):0.4,Hymenoptera:1.0):0.6,Hemiptera:1.6):0.6,Ephemeroptera:2.2):0.6);", file = "ex.tre", sep = "\n")
tree.ins <- read.tree("ex.tre")
plot(tree.ins)
size_ins = aggregate(insects$body_area,list(insects$class),max)[,2]
names(size_ins) = unique(insects$class)[order(unique(insects$class))]
K_result <- phylosig(tree.ins, size_ins, method = "lambda", test = TRUE,niter = 9999)
print(K_result)
aggregate(insects$body_area,list(Trap=insects$trap,Taxa=insects$class),max)->size_mat
colnames(size_mat) = c("Trap","Taxa","Size")
size_mat[order(size_mat$Taxa,size_mat$Trap),]->size_mat
expand.grid(unique(insects$trap),unique(insects$class))->size_empty
size_empty$size<-NA
size_empty$size<-size_mat[match(paste0(size_empty$Var1,size_empty$Var2),paste0(size_mat$Trap,size_mat$Taxa)),3]
size_mat = size_empty
colnames(size_mat)[1:3] = c("Trap","Taxa","Size")
gam_data<-data.frame(size_mat,Long=land$X,Lat=land$Y,Area=land[,"Area0100"])
taxa_gam_res<-lapply(unique(gam_data$Taxa),function(w){
taxa_gam = gam_data[gam_data$Taxa==w,]
taxa_gam = na.omit(taxa_gam)
AICs<-lapply(1:20,function(y){
gam(Size~Area+s(Long, Lat,k=y),family = "quasipoisson",data = taxa_gam)->GAM_Size
return(AIC(GAM_Size))
})
data.frame(k=1:20,AIC=unlist(AICs))->k_data
k_data[order(k_data$AIC),][1,]$k->temp_k
gam(Size~Area+s(Long, Lat,k=temp_k),family = "quasipoisson",data = taxa_gam)->GAM_Size
summary(GAM_Size)
dist(taxa_gam[,c("Lat","Long")])->distzzz
Moran.I(GAM_Size$residuals,as.matrix(distzzz))->MoranI
return(list(moran=data.frame(observed=MoranI$observed,expected=MoranI$expected,sd=MoranI$sd,p=MoranI$p.value, taxa=w),
coefs=data.frame(Estimate=c(summary(GAM_Size)[[1]],NA),k=temp_k,stat=c(summary(GAM_Size)[[3]],summary(GAM_Size)[[7]]),P=c(summary(GAM_Size)[[4]],summary(GAM_Size)[[8]]),R2=summary(GAM_Size)[[10]],AIC=AIC(GAM_Size),var=c(names(summary(GAM_Size)[[1]]),"Coordinates"),eff=c(rep("Fixed effects",length(summary(GAM_Size)[[1]])),"Random effects"), taxa=w)))
})
do.call("rbind",lapply(taxa_gam_res,"[[",1))->moran_taxa
do.call("rbind",lapply(taxa_gam_res,"[[",2))->SoE_size
add_significance(SoE_size,p.col="P",cutpoints = c(0, 1e-04, 0.001, 0.01, 0.05, 0.1,1),
symbols = c("****", "***", "**", "*", ".","ns"))->SoE_size
area_coefs_size_ord = SoE_size[grepl("Area",rownames(SoE_size)),]
area_size<-{}
for(x in 1:length(unique(area_coefs_size_ord$taxa))){
area_coefs_size_ord[area_coefs_size_ord$taxa==unique(area_coefs_size_ord$taxa)[x],]->sel_tax
area_size[[length(area_size)+1]]<-sel_tax[order(sel_tax$R2,decreasing = T),][1,]
}
do.call("rbind",area_size)->area_size
area_size
size_mat$Area<-NA
for(x in unique(size_mat$Taxa)){
size_mat[size_mat$Taxa==x,]$Area<-land[,paste0("Area",sprintf("%04d",area_size[area_size$taxa==x,]$scale))]
area_coefs_size_ord[area_coefs_size_ord$taxa==x,]$R2<-vegan::decostand(area_coefs_size_ord[area_coefs_size_ord$taxa==x,]$R2,method = "range")
}
size_mat$Area<-land_fil$Area0100
size_mat$Area<-land$Area0100
as.character(size_mat$Taxa)->size_mat$Taxa
size_mat$Taxa = factor(size_mat$Taxa,levels=all_names$Taxa)
as.character(area_coefs_size_ord$taxa)->area_coefs_size_ord$taxa
area_coefs_size_ord$taxa = factor(area_coefs_size_ord$taxa,levels=all_names$Taxa)
as.character(area_size$taxa)->area_size$taxa
area_size$taxa = factor(area_size$taxa,levels=all_names$Taxa)
eff_size_soe<-lapply(unique(area_coefs_size_ord$taxa),function(x){
area_size[area_size$taxa==x,]$scale->sel_scale
return(area_coefs_size_ord[area_coefs_size_ord$taxa==x,]$Estimate/area_coefs_size_ord[(area_coefs_size_ord$taxa==x)&(area_coefs_size_ord$scale==sel_scale),]$Estimate)
})
min(unlist(eff_size_soe))
(max(unlist(eff_size_soe))-1)*100
ScaEffOrd_size<-ggplot()+
geom_point(data=area_coefs_size_ord,aes(y=Estimate,x=scale, size=R2, fill=taxa,shape=taxa,color=taxa))+
geom_line(data=area_coefs_size_ord,aes(y=Estimate,x=scale, color=taxa, group=taxa),linetype="solid")+
geom_vline(data=area_size[grepl("Area",rownames(area_size)),],aes(xintercept = scale,color=taxa),linetype="dashed")+
facet_wrap(.~"(f) Body size's SOE:")+
geom_hline(yintercept = 0,linetype="dashed",alpha=0.4)+
theme_minimal()+
scale_size_continuous(labels=c("Min","Mid-low","Mid","Mid-high","Max"),breaks = seq(min(area_coefs_size_ord$R2),max(area_coefs_size_ord$R2),length.out=5),limits = c(min(area_coefs_size_ord$R2),max(area_coefs_size_ord$R2)))+
guides(size=guide_legend(order = 2),color=guide_legend(order = 1),fill=guide_legend(order = 1),shape=guide_legend(order = 1))+
scale_color_manual(values=my_cols,labels=fantasy_names)+
scale_fill_manual(values=my_cols,labels=fantasy_names)+
scale_shape_manual(values=c(21,22,23,24,25,8,13),labels=fantasy_names)+
labs(x="Spatial scale (m)",y="Effect size",size="Adj-RÂ²",fill="Taxa",color="Taxa",shape="Taxa")+
theme(legend.justification = "top",strip.text = element_text(size=12,family="sans",face = "bold",hjust = 0,vjust = 0.5),strip.background = element_rect(fill="transparent",color="transparent"), legend.text.align = 0,legend.title.align=0,legend.position = "right", legend.background = element_rect(fill="NA", colour = "NA"), legend.title = element_text(face="bold", family = "sans", colour = "black", size=12), legend.text = element_text(family ="sans", size=10), axis.text = element_text(family = "sans", colour = "black", size=12), axis.title = element_text(face="bold",family = "sans", size = 14));ScaEffOrd_size
size_mat = size_mat[!is.na(size_mat$Size),]
size_mat[(size_mat$Taxa!="Trichoptera")&(size_mat$Taxa!="Hemiptera"),]->size_plt
size_plt$Taxa<-all_names[match(size_plt$Taxa,all_names$Taxa),2]
size_plt$Taxa = factor(size_plt$Taxa,levels = c("Bees and wasps","Beetles","Flies","Mayflies","Mosquitoes"))
area_size
size_plt$Taxa
factor(size_plt$Taxa)
as.character(size_mat$Taxa)->size_mat$Taxa
size_mat$Taxa = factor(size_mat$Taxa,levels=all_names$Taxa)
as.character(area_coefs_size_ord$taxa)->area_coefs_size_ord$taxa
area_coefs_size_ord$taxa = factor(area_coefs_size_ord$taxa,levels=all_names$Taxa)
as.character(area_size$taxa)->area_size$taxa
area_size$taxa = factor(area_size$taxa,levels=all_names$Taxa)
size_mat = size_mat[!is.na(size_mat$Size),]
size_mat[(size_mat$Taxa!="Trichoptera")&(size_mat$Taxa!="Hemiptera")&(size_mat$Taxa!="Mosquitoes"),]->size_plt
size_plt$Taxa<-all_names[match(size_plt$Taxa,all_names$Taxa),2]
size_plt$Taxa = factor(size_plt$Taxa,levels = c("Bees and wasps","Beetles","Flies","Mayflies"))
size_plt
size_plt$Taxa
size_plt$Taxa
size_plt$Taxa = paste0("(",letters[1:5],"): ",levels(size_plt$Taxa))[match(size_plt$Taxa,levels(size_plt$Taxa))]
SizeOrdPlt1<-ggplot()+
geom_point(data=size_plt[!grepl("Mayflies|Mosquitoes",size_plt$Taxa),],aes(x=Area,y=log10(Size),color=Taxa,fill=Taxa,shape=Taxa))+
geom_smooth(data=size_plt[!grepl("Mayflies|Mosquitoes",size_plt$Taxa),],aes(x=Area,y=log10(Size),color=Taxa),method = "glm",method.args=list(family="quasipoisson"))+
facet_wrap(.~Taxa,scales = "free_y")+
scale_color_manual(values=my_cols[-c(4,7)],labels=fantasy_names[-c(4,7)])+
scale_fill_manual(values=my_cols[-c(4,7)],labels=fantasy_names[-c(4,7)])+
scale_linetype(labels=fantasy_names[-c(4,7)])+
theme_minimal()+
#scale_y_continuous(labels = c(0,10,100),breaks = c(0,1,2))+
#guides(color="none",fill="none",color="none",shape="none")+
scale_shape_manual(values=c(21,22,23,24,25,8,13),labels=fantasy_names[-c(4,7)])+
labs(x="Proportion of forest",y="Area of the bounding box",color="Biological\ngroup",fill="Biological\ngroup",shape="Biological\ngroup",linetype="Biological\ngroup")+
theme(legend.justification = "top",strip.text = element_text(size=12,family="sans",face = "bold",hjust = 0,vjust = 0.5),strip.background = element_rect(fill="transparent",color="transparent"), legend.text.align = 0,legend.title.align=0,legend.position = "none", legend.background = element_rect(fill="NA", colour = "NA"), legend.title = element_text(face="bold", family = "sans", colour = "black", size=12), legend.text = element_text(family ="sans", size=10), axis.text = element_text(family = "sans", colour = "black", size=12), axis.title = element_text(face="bold",family = "sans", size = 14));SizeOrdPlt1
size_plt
size_mat = size_empty
colnames(size_mat)[1:3] = c("Trap","Taxa","Size")
area_coefs_size_ord = SoE_size[grepl("Area",rownames(SoE_size)),]
area_size<-{}
for(x in 1:length(unique(area_coefs_size_ord$taxa))){
area_coefs_size_ord[area_coefs_size_ord$taxa==unique(area_coefs_size_ord$taxa)[x],]->sel_tax
area_size[[length(area_size)+1]]<-sel_tax[order(sel_tax$R2,decreasing = T),][1,]
}
do.call("rbind",area_size)->area_size
area_size
size_mat$Area<-land$Area0100
as.character(size_mat$Taxa)->size_mat$Taxa
size_mat$Taxa = factor(size_mat$Taxa,levels=all_names$Taxa)
as.character(area_coefs_size_ord$taxa)->area_coefs_size_ord$taxa
area_coefs_size_ord$taxa = factor(area_coefs_size_ord$taxa,levels=all_names$Taxa)
as.character(area_size$taxa)->area_size$taxa
area_size$taxa = factor(area_size$taxa,levels=all_names$Taxa)
size_mat = size_mat[!is.na(size_mat$Size),]
size_mat
size_mat[(size_mat$Taxa!="Trichoptera")&(size_mat$Taxa!="Hemiptera")&(size_mat$Taxa!="Nematocera"),]->size_plt
size_plt$Taxa<-all_names[match(size_plt$Taxa,all_names$Taxa),2]
size_plt$Taxa = factor(size_plt$Taxa,levels = c("Bees and wasps","Beetles","Flies","Mayflies"))
size_plt$Taxa = paste0("(",letters[1:5],"): ",levels(size_plt$Taxa))[match(size_plt$Taxa,levels(size_plt$Taxa))]
SizeOrdPlt1<-ggplot()+
geom_point(data=size_plt[!grepl("Mayflies|Mosquitoes",size_plt$Taxa),],aes(x=Area,y=log10(Size),color=Taxa,fill=Taxa,shape=Taxa))+
geom_smooth(data=size_plt[!grepl("Mayflies|Mosquitoes",size_plt$Taxa),],aes(x=Area,y=log10(Size),color=Taxa),method = "glm",method.args=list(family="quasipoisson"))+
facet_wrap(.~Taxa,scales = "free_y")+
scale_color_manual(values=my_cols[-c(4,7)],labels=fantasy_names[-c(4,7)])+
scale_fill_manual(values=my_cols[-c(4,7)],labels=fantasy_names[-c(4,7)])+
scale_linetype(labels=fantasy_names[-c(4,7)])+
theme_minimal()+
#scale_y_continuous(labels = c(0,10,100),breaks = c(0,1,2))+
#guides(color="none",fill="none",color="none",shape="none")+
scale_shape_manual(values=c(21,22,23,24,25,8,13),labels=fantasy_names[-c(4,7)])+
labs(x="Proportion of forest",y="Area of the bounding box",color="Biological\ngroup",fill="Biological\ngroup",shape="Biological\ngroup",linetype="Biological\ngroup")+
theme(legend.justification = "top",strip.text = element_text(size=12,family="sans",face = "bold",hjust = 0,vjust = 0.5),strip.background = element_rect(fill="transparent",color="transparent"), legend.text.align = 0,legend.title.align=0,legend.position = "none", legend.background = element_rect(fill="NA", colour = "NA"), legend.title = element_text(face="bold", family = "sans", colour = "black", size=12), legend.text = element_text(family ="sans", size=10), axis.text = element_text(family = "sans", colour = "black", size=12), axis.title = element_text(face="bold",family = "sans", size = 14));SizeOrdPlt1
SizeOrdPlt2<-ggplot()+
geom_point(data=size_plt[grepl("Mayflies|Mosquitoes",size_plt$Taxa),],aes(x=Area,y=log10(Size),color=Taxa,fill=Taxa,shape=Taxa))+
geom_smooth(data=size_plt[grepl("Mayflies|Mosquitoes",size_plt$Taxa),],aes(x=Area,y=log10(Size),color=Taxa),method = "glm",method.args=list(family="quasipoisson"))+
facet_wrap(.~Taxa,scales = "free_y")+
scale_color_manual(values=my_cols[-c(1:3,4,7)],labels=fantasy_names[-c(1:3,4,7)])+
scale_fill_manual(values=my_cols[-c(1:3,4,7)],labels=fantasy_names[-c(1:3,4,7)])+
scale_linetype(labels=fantasy_names[-c(1:3,4,7)])+
theme_minimal()+
#scale_y_continuous(labels = c(0,10,100),breaks = c(0,1,2))+
#guides(color="none",fill="none",color="none",shape="none")+
scale_shape_manual(values=c(8,13),labels=fantasy_names[-c(1:3,4,7)])+
labs(x="Proportion of forest",y="Area of the bounding box",color="Biological\ngroup",fill="Biological\ngroup",shape="Biological\ngroup",linetype="Biological\ngroup")+
theme(legend.justification = "top",strip.text = element_text(size=12,family="sans",face = "bold",hjust = 0,vjust = 0.5),strip.background = element_rect(fill="transparent",color="transparent"), legend.text.align = 0,legend.title.align=0,legend.position = "none", legend.background = element_rect(fill="NA", colour = "NA"), legend.title = element_text(face="bold", family = "sans", colour = "black", size=12), legend.text = element_text(family ="sans", size=10), axis.text = element_text(family = "sans", colour = "black", size=12), axis.title = element_text(face="bold",family = "sans", size = 14));SizeOrdPlt2
SizeOrdPlt1<-ggplot()+
geom_point(data=size_plt,aes(x=Area,y=log10(Size),color=Taxa,fill=Taxa,shape=Taxa))+
geom_smooth(data=size_plt,aes(x=Area,y=log10(Size),color=Taxa),method = "glm",method.args=list(family="quasipoisson"))+
facet_wrap(.~Taxa,scales = "free_y")+
scale_color_manual(values=my_cols[-c(4,7)],labels=fantasy_names[-c(4,7)])+
scale_fill_manual(values=my_cols[-c(4,7)],labels=fantasy_names[-c(4,7)])+
scale_linetype(labels=fantasy_names[-c(4,7)])+
theme_minimal()+
#scale_y_continuous(labels = c(0,10,100),breaks = c(0,1,2))+
#guides(color="none",fill="none",color="none",shape="none")+
scale_shape_manual(values=c(21,22,23,24,25,8,13),labels=fantasy_names[-c(4,7)])+
labs(x="Proportion of forest",y="Area of the bounding box",color="Biological\ngroup",fill="Biological\ngroup",shape="Biological\ngroup",linetype="Biological\ngroup")+
theme(legend.justification = "top",strip.text = element_text(size=12,family="sans",face = "bold",hjust = 0,vjust = 0.5),strip.background = element_rect(fill="transparent",color="transparent"), legend.text.align = 0,legend.title.align=0,legend.position = "none", legend.background = element_rect(fill="NA", colour = "NA"), legend.title = element_text(face="bold", family = "sans", colour = "black", size=12), legend.text = element_text(family ="sans", size=10), axis.text = element_text(family = "sans", colour = "black", size=12), axis.title = element_text(face="bold",family = "sans", size = 14));SizeOrdPlt1
AbunOrdPlt1
AbunOrdPlt2
##### Arrange and save plots ----
arr1 = ggarrange(AbunOrdPlt1,AbunOrdPlt2,nrow = 2,common.legend = T,legend.grob = get_legend(ScaEffOrd_abun),legend = "right"); arr1
##### Arrange and save plots ----
arr1 = ggarrange(AbunOrdPlt1,AbunOrdPlt2,nrow = 2,common.legend = T,legend = "right"); arr1
##### Arrange and save plots ----
arr1 = ggarrange(AbunOrdPlt1,AbunOrdPlt2,nrow = 2,common.legend = T,legend = "none"); arr1
AbunOrdPlt1<-ggplot()+
geom_point(data=plt_data,aes(x=Area,y=log10(Abun+1),color=Taxa,fill=Taxa,shape=Taxa))+
geom_smooth(data=plt_data,aes(x=Area,y=log10(Abun+1),color=Taxa),method = "glm",method.args=list(family="quasipoisson"))+
facet_wrap(.~Taxa,scales = "free_y",nrow = 1)+
scale_color_manual(values=my_cols,labels=fantasy_names)+
scale_fill_manual(values=my_cols,labels=fantasy_names)+
scale_linetype(labels=fantasy_names)+
theme_minimal()+
scale_y_continuous(labels = c(0,10,100),breaks = c(0,1,2))+
#guides(color="none",fill="none",color="none",shape="none")+
scale_shape_manual(values=c(21,22,23,24,25,8,13),labels=fantasy_names)+
labs(x="Proportion of forest",y="Number of individuals",color="Biological\ngroup",fill="Biological\ngroup",shape="Biological\ngroup",linetype="Biological\ngroup")+
theme(legend.justification = "top",strip.text = element_text(size=12,family="sans",face = "bold",hjust = 0,vjust = 0.5),strip.background = element_rect(fill="transparent",color="transparent"), legend.text.align = 0,legend.title.align=0,legend.position = "none", legend.background = element_rect(fill="NA", colour = "NA"), legend.title = element_text(face="bold", family = "sans", colour = "black", size=12), legend.text = element_text(family ="sans", size=10), axis.text = element_text(family = "sans", colour = "black", size=12), axis.title = element_text(face="bold",family = "sans", size = 14));AbunOrdPlt1
AbunOrdPlt1<-ggplot()+
geom_point(data=plt_data,aes(x=Area,y=log10(Abun+1),color=Taxa,fill=Taxa,shape=Taxa))+
geom_smooth(data=plt_data,aes(x=Area,y=log10(Abun+1),color=Taxa),method = "glm",method.args=list(family="quasipoisson"))+
facet_wrap(.~Taxa,scales = "free_y",nrow = 2)+
scale_color_manual(values=my_cols,labels=fantasy_names)+
scale_fill_manual(values=my_cols,labels=fantasy_names)+
scale_linetype(labels=fantasy_names)+
theme_minimal()+
scale_y_continuous(labels = c(0,10,100),breaks = c(0,1,2))+
#guides(color="none",fill="none",color="none",shape="none")+
scale_shape_manual(values=c(21,22,23,24,25,8,13),labels=fantasy_names)+
labs(x="Proportion of forest",y="Number of individuals",color="Biological\ngroup",fill="Biological\ngroup",shape="Biological\ngroup",linetype="Biological\ngroup")+
theme(legend.justification = "top",strip.text = element_text(size=12,family="sans",face = "bold",hjust = 0,vjust = 0.5),strip.background = element_rect(fill="transparent",color="transparent"), legend.text.align = 0,legend.title.align=0,legend.position = "none", legend.background = element_rect(fill="NA", colour = "NA"), legend.title = element_text(face="bold", family = "sans", colour = "black", size=12), legend.text = element_text(family ="sans", size=10), axis.text = element_text(family = "sans", colour = "black", size=12), axis.title = element_text(face="bold",family = "sans", size = 14));AbunOrdPlt1
AbunOrdPlt1
##### Arrange and save plots ----
ggsave(filename = "figures/abundance_order.tif",plot = AbunOrdPlt1,units = "in",width = 13.5,height = 6,dpi = 600)
SizeOrdPlt1
ggsave(filename = "figures/size_order.tif",plot = SizeOrdPlt1,units = "in",width = 11,height = 6,dpi = 600)
ggsave(filename = "figures/size_order.tif",plot = SizeOrdPlt1,units = "in",width = 6,height = 6,dpi = 600)
ggsave(filename = "figures/size_order.tif",plot = SizeOrdPlt1,units = "in",width = 7,height = 6,dpi = 600)
arr3 = ggarrange(SADPlt,NPlt,common.legend = T,legend = "right");arr3
arr3
ggsave(filename = "figures/SAD+N.tif",plot = arr3,units = "in",width = 8.5,height = 4,dpi = 600)
ggsave(filename = "figures/SAD+N.tif",plot = arr3,units = "in",width = 9,height = 4,dpi = 600)
ggsave(filename = "figures/SAD+N.tif",plot = arr3,units = "in",width = 9.5,height = 4,dpi = 600)
arr6 = ggarrange(CompPlt2,CompPlt1,betaC_plt,nrow = 1,ncol = 3,widths = c(1,1,0.5),align = "h");arr6
arr6 = ggarrange(ggarrange(CompPlt2,CompPlt1,common.legend = T,legend = "right"),betaC_plt,nrow = 1,ncol = 3,widths = c(1,1,0.5),align = "h");arr6
arr6 = ggarrange(ggarrange(CompPlt2,CompPlt1,common.legend = T,legend = "right"),betaC_plt,nrow = 1,ncol = 2,widths = c(1,0.5),align = "h");arr6
arr6 = ggarrange(ggarrange(CompPlt2,CompPlt1,common.legend = T,legend = "right"),betaC_plt,nrow = 1,ncol = 2,widths = c(1,0.2),align = "h");arr6
ggsave(filename = "figures/composition_plot.tif",plot = arr6,units = "in",width = 11.75,height = 7.5,dpi = 600)
arr6 = ggarrange(betaC_plt,ggarrange(CompPlt2,CompPlt1,common.legend = T,legend = "right"),nrow = 1,ncol = 2,widths = c(1,0.2),align = "h");arr6
arr6 = ggarrange(betaC_plt,ggarrange(CompPlt2,CompPlt1,common.legend = T,legend = "right"),nrow = 1,ncol = 2,widths = c(0.2,1),align = "h");arr6
ggsave(filename = "figures/composition_plot.tif",plot = arr6,units = "in",width = 14,height = 7.5,dpi = 600)
ggsave(filename = "figures/composition_plot.tif",plot = arr6,units = "in",width = 14,height = 6,dpi = 600)
arr6 = ggarrange(betaC_plt,ggarrange(CompPlt2,CompPlt1,common.legend = T,legend = "right"),nrow = 1,ncol = 2,widths = c(0.4,1),align = "h");arr6
ggsave(filename = "figures/composition_plot.tif",plot = arr6,units = "in",width = 14,height = 6,dpi = 600)
arr6 = ggarrange(betaC_plt,ggarrange(CompPlt2,CompPlt1,common.legend = T,legend = "right"),nrow = 1,ncol = 2,widths = c(0.3,1),align = "h");arr6
ggsave(filename = "figures/composition_plot.tif",plot = arr6,units = "in",width = 14,height = 6,dpi = 600)
ggsave(filename = "figures/composition_plot.tif",plot = arr6,units = "in",width = 16,height = 6,dpi = 600)
ggsave(filename = "figures/composition_plot.tif",plot = arr6,units = "in",width = 16,height = 4,dpi = 600)
ggsave(filename = "figures/composition_plot.tif",plot = arr6,units = "in",width = 16,height = 5,dpi = 600)
arr6 = ggarrange(betaC_plt,ggarrange(CompPlt2,CompPlt1,common.legend = T,legend = "right"),nrow = 1,ncol = 2,widths = c(0.25,1),align = "h");arr6
ggsave(filename = "figures/composition_plot.tif",plot = arr6,units = "in",width = 16,height = 5,dpi = 600)
arr6 = ggarrange(betaC_plt,ggarrange(CompPlt2,CompPlt1,common.legend = T,legend = "right"),nrow = 1,ncol = 2,widths = c(0.27,1),align = "h");arr6
ggsave(filename = "figures/composition_plot.tif",plot = arr6,units = "in",width = 16,height = 5,dpi = 600)
arr6 = ggarrange(betaC_plt,ggarrange(CompPlt2,CompPlt1,common.legend = T,legend = "right"),nrow = 1,ncol = 2,widths = c(0.275,1),align = "h");arr6
ggsave(filename = "figures/composition_plot.tif",plot = arr6,units = "in",width = 16,height = 5,dpi = 600)
arr6 = ggarrange(betaC_plt,ggarrange(CompPlt2,CompPlt1,common.legend = T,legend = "right"),nrow = 1,ncol = 2,widths = c(0.265,1),align = "h");arr6
ggsave(filename = "figures/composition_plot.tif",plot = arr6,units = "in",width = 16,height = 5,dpi = 600)
arr6 = ggarrange(betaC_plt,ggarrange(CompPlt2,CompPlt1,common.legend = T,legend = "right"),nrow = 1,ncol = 2,widths = c(0.255,1),align = "h");arr6
ggsave(filename = "figures/composition_plot.tif",plot = arr6,units = "in",width = 16,height = 5,dpi = 600)
ggsave(filename = "figures/composition_plot.tif",plot = arr6,units = "in",width = 15,height = 5,dpi = 600)
arr6 = ggarrange(betaC_plt,ggarrange(CompPlt2,CompPlt1,common.legend = T,legend = "right"),nrow = 1,ncol = 2,widths = c(0.275,1),align = "h");arr6
ggsave(filename = "figures/composition_plot.tif",plot = arr6,units = "in",width = 15,height = 5,dpi = 600)
box_data3<-data.frame(beta=c(T_betaC,A_betaC),group=c(rep("T",9999),rep("A",9999)),type="(a) Coverage-based rarefaction:",var="occ")
final_box <- rbind(box_data,box_data3)
betaC_plt<-ggplot(data = final_box[final_box$var=="abun",],mapping = aes(x=group,y=beta))+
geom_violin(mapping = aes(color=group,fill=group),trim = F,width=1.5)+
stat_summary(fun.data=mean_sd,geom="pointrange",color="white")+
facet_wrap(.~type)+
scale_color_manual(values=c("#1f96c4","#20684a"))+
scale_fill_manual(values=c("#1f96c4","#20684a"))+
scale_x_discrete(labels=c("Aquatic","Terrestrial"))+
#stat_pvalue_manual(stat.test, label = "p.adj.signif",hide.ns = T)+
theme_minimal()+
guides(fill="none",color="none")+
labs(x="Life cycle",y="Î²-diversity",color="Life cycle")+
theme(legend.justification = "top",strip.text = element_text(size=12,family="sans",face = "bold",hjust = 0,vjust = 0.5),strip.background = element_rect(fill="transparent",color="transparent"), legend.text.align = 0,legend.title.align=0,legend.position = "none", legend.background = element_rect(fill="NA", colour = "NA"), legend.title = element_text(face="bold", family = "sans", colour = "black", size=12), legend.text = element_text(family ="sans", size=10), axis.text = element_text(family = "sans", colour = "black", size=12), axis.title = element_text(face="bold",family = "sans", size = 14));betaC_plt
CompPlt1<-ggplot()+
geom_hline(yintercept = 0,linetype="dashed",alpha=0.4)+
geom_vline(xintercept = 0,linetype="dashed",alpha=0.4)+
#geom_point(data=comp_data,aes(x=PCoA1,y=PCoA2,fill=Area),shape=21,color="black")+
geom_point(data=full_data[full_data$hab=="T",],aes(x=PCoA1,y=PCoA2,color=prop,size=land_fil$Area0100[full_data$hab=="T"]))+
theme_minimal()+
facet_wrap(.~"(c) Abundance change (PCoA):")+
# guides(color = guide_colorbar(barwidth = 5.5,barheight = 1,label.position = "bottom",title.position = "top", title.vjust = 1,direction = "vertical"),
#        size=guide_legend(barwidth = 1,barheight = 1,label.position = "bottom",title.position = "top", title.vjust = 1,direction = "vertical"))+
# #guides(fill=guide_legend(ncol=2),size=guide_legend(ncol=2))+
#scale_color_gradient(low = "#0766AD",high = "#6EC207",guide = "colorbar")+
scale_color_gradient(low = "#1f96c4",high = "#20684a",guide = "colorbar")+
labs(x=paste0("PCoA 1 (",round((pcoa2$eig[1]/sum(pcoa2$eig))*100,1),"%)"),y=paste0("PCoA 2 (",round((pcoa2$eig[2]/sum(pcoa2$eig))*100,1),"%)"),color="Proportion\nof terrestrial\nindividuals",size="Proportion\nof forest")+
theme(legend.justification = "left",strip.text = element_text(size=12,family="sans",face = "bold",hjust = 0),strip.background = element_rect(fill="transparent",color="transparent"), legend.text.align = 0,legend.title.align=0,legend.position = "right", legend.background = element_rect(fill="NA", colour = "NA"), legend.title = element_text(face="bold", family = "sans", colour = "black", size=12), legend.text = element_text(family ="sans", size=9), axis.text = element_text(family = "sans", colour = "black", size=12), axis.title = element_text(face="bold",family = "sans", size = 14));CompPlt1
CompPlt2<-ggplot()+
#geom_point(data=comp_data,aes(x=PCoA1,y=PCoA2,fill=Area),shape=21,color="black")+
geom_hline(yintercept = 0,linetype="dashed",alpha=0.4)+
geom_vline(xintercept = 0,linetype="dashed",alpha=0.4)+
geom_point(data=full_data[full_data$hab=="T",],aes(x=PCoA1_occ,y=PCoA2_occ,color=propOcc,size=land_fil$Area0100[full_data$hab=="T"]))+
theme_minimal()+
facet_wrap(.~"(b) Compositional change (PCoA):")+
# guides(color = guide_colorbar(barwidth = 5.5,barheight = 1,label.position = "bottom",title.position = "top", title.vjust = 1,direction = "vertical"),
#        size=guide_legend(barwidth = 1,barheight = 1,label.position = "bottom",title.position = "top", title.vjust = 1,direction = "vertical"))+
# #guides(fill=guide_legend(ncol=2),size=guide_legend(ncol=2))+
#scale_color_gradient(low = "#0766AD",high = "#6EC207",guide = "colorbar")+
scale_color_gradient(low = "#1f96c4",high = "#20684a",guide = "colorbar")+
labs(x=paste0("PCoA 1 (",round((pcoa_occ$eig[1]/sum(pcoa_occ$eig))*100,1),"%)"),y=paste0("PCoA 2 (",round((pcoa_occ$eig[2]/sum(pcoa_occ$eig))*100,1),"%)"),color="Proportion\nof terrestrial\ngroups",size="Proportion\nof forest")+
theme(legend.justification = "left",strip.text = element_text(size=12,family="sans",face = "bold",hjust = 0),strip.background = element_rect(fill="transparent",color="transparent"), legend.text.align = 0,legend.title.align=0,legend.position = "right", legend.background = element_rect(fill="NA", colour = "NA"), legend.title = element_text(face="bold", family = "sans", colour = "black", size=12), legend.text = element_text(family ="sans", size=9), axis.text = element_text(family = "sans", colour = "black", size=12), axis.title = element_text(face="bold",family = "sans", size = 14));CompPlt2
arr6 = ggarrange(betaC_plt,ggarrange(CompPlt2,CompPlt1,common.legend = T,legend = "right"),nrow = 1,ncol = 2,widths = c(0.275,1),align = "h");arr6
ggsave(filename = "figures/composition_plot.tif",plot = arr6,units = "in",width = 15,height = 5,dpi = 600)
TableS2 = data.frame(Group=c(rep("Lifecycle",nrow(moran_S)+nrow(moran_Comp)),as.character(moran_taxa$taxa),as.character(moran_size$taxa)),
Observed=c(moran_S$observed,moran_Comp$observed,moran_taxa$observed,moran_size$observed),
Expected=c(moran_S$expected,moran_Comp$expected,moran_taxa$expected,moran_size$expected),
SD=c(moran_S$sd,moran_Comp$sd,moran_taxa$sd,moran_size$sd),
P=c(moran_S$p,moran_Comp$p,moran_taxa$p,moran_size$p),
Scale=c(moran_S$scale,moran_Comp$scale,moran_taxa$scale,moran_size$scale),
Response=c(moran_S$component,moran_Comp$data,rep("Abundance",nrow(moran_taxa)),rep("Body size",nrow(moran_size))))
moran_S
size_ins
K_result <- phylosig(tree.ins, size_ins, method = "lambda", test = TRUE,niter = 9999)
print(K_result)
summary(GAM_S1)
summary(GAM_S2)
summary(GAM_S1)
summary(GAM_S2)
gam_data<-data.frame(full_data[full_data$hab=="T",],Area=land_fil[full_data$hab=="T","Area0100"])
AICs<-lapply(1:20,function(y){
gam(PCoA1~Area+s(Long, Lat,k=y),family = "gaussian",data = gam_data)->GAM_Comp
gam(PCoA1_occ~Area+s(Long, Lat,k=y),family = "gaussian",data = gam_data)->GAM_Comp2
return(c(AIC(GAM_Comp,GAM_Comp2)))
})
gam_data
data.frame(k=1:20,AIC1=unlist(lapply(AICs,"[[",1)),AIC2=unlist(lapply(AICs,"[[",2)))->k_data
k_data[order(k_data$AIC1),][1,]$k->temp_k1
k_data[order(k_data$AIC2),][1,]$k->temp_k2
gam(PCoA1~Area+s(Long, Lat,k=temp_k1),family = "gaussian",data = gam_data)->GAM_Comp
gam(PCoA1_occ~Area+s(Long, Lat,k=temp_k2),family = "gaussian",data = gam_data)->GAM_Comp2
dist(gam_data[,c("Lat","Long")])->distzzz
Moran.I(GAM_Comp$residuals,as.matrix(distzzz))->MoranI1
Moran.I(GAM_Comp2$residuals,as.matrix(distzzz))->MoranI2
full_coefs = data.frame(Estimate=c(summary(GAM_Comp)[[1]],NA,summary(GAM_Comp2)[[1]],NA),
k=c(rep(temp_k1,((length(summary(GAM_Comp)[[1]])+1))),rep(temp_k2,((length(summary(GAM_Comp)[[1]])+1)))),
stat=c(summary(GAM_Comp)[[3]],summary(GAM_Comp)[[7]],summary(GAM_Comp2)[[3]],summary(GAM_Comp2)[[7]]),
P=c(summary(GAM_Comp)[[4]],summary(GAM_Comp)[[8]],summary(GAM_Comp2)[[4]],summary(GAM_Comp2)[[8]]),
R2=c(rep(summary(GAM_Comp)[[10]],((length(summary(GAM_Comp)[[1]])+1))),rep(summary(GAM_Comp2)[[10]],((length(summary(GAM_Comp)[[1]])+1)))),
AIC=c(rep(AIC(GAM_Comp),((length(summary(GAM_Comp)[[1]])+1))),rep(AIC(GAM_Comp2),((length(summary(GAM_Comp)[[1]])+1)))),
scale=x,
var=c(names(summary(GAM_Comp)[[1]]),"Coordinates"),eff=c(rep("Fixed effects",length(summary(GAM_Comp)[[1]])),"Random effects"),
data=c(rep("Abundance",((length(summary(GAM_Comp)[[1]])+1))),rep("Occurrence",((length(summary(GAM_Comp)[[1]])+1)))))
GAM_Comp_res<-(list(moran=data.frame(observed=c(MoranI1$observed,MoranI2$observed),expected=c(MoranI1$expected,MoranI2$expected),sd=c(MoranI1$sd,MoranI2$sd),p=c(MoranI1$p.value,MoranI2$p.value),scale=x,data=c("Abundance","Occurrence")),
coefs=full_coefs))
do.call("rbind",lapply(GAM_Comp_res,"[[",1))->moran_Comp
do.call("rbind",lapply(GAM_Comp_res,"[[",2))->SoE_Comp
SoE_Comp
GAM_Comp_res
GAM_Comp_res$coefs->SoE_Comp
GAM_Comp_res$moran->moran_Comp
SoE_Comp
summary(GAM_Comp)
summary(GAM_Comp2)
area_abun
size_mat
area_size
SADPlt<-ggplot()+
geom_point(data=full_data,aes(x=land_fil$Area0100,y=log(SAD_effect),color=hab))+
geom_smooth(data=full_data,aes(x=land_fil$Area0100,y=log(SAD_effect),color=hab),method="glm",method.args=list(family="quasipoisson"))+
facet_wrap(.~"(a) SAD-component:")+
scale_color_manual(values=c("#1f96c4","#20684a"),labels=c("Aquatic","Terrestrial"))+
theme_minimal()+
labs(x="Proportion of forest",y="Effective number of groups",color="Life cycle")+
theme(legend.justification = "top",strip.text = element_text(size=12,family="sans",face = "bold",hjust = 0,vjust = 0),strip.background = element_rect(fill="transparent",color="transparent"), legend.text.align = 0,legend.title.align=0,legend.position = "right", legend.background = element_rect(fill="NA", colour = "NA"), legend.title = element_text(face="bold", family = "sans", colour = "black", size=12), legend.text = element_text(family ="sans", size=10), axis.text = element_text(family = "sans", colour = "black", size=12), axis.title = element_text(face="bold",family = "sans", size = 14));SADPlt
size_ins = aggregate(insects$body_area,list(insects$class),max)[,2]
names(size_ins) = unique(insects$class)[order(unique(insects$class))]
K_result <- phylosig(tree.ins, size_ins, method = "lambda", test = TRUE,niter = 9999)
print(K_result)
aggregate(insects$body_area,list(Trap=insects$trap,Taxa=insects$class),max)->size_mat
colnames(size_mat) = c("Trap","Taxa","Size")
size_mat[order(size_mat$Taxa,size_mat$Trap),]->size_mat
expand.grid(unique(insects$trap),unique(insects$class))->size_empty
size_empty$size<-NA
size_empty$size<-size_mat[match(paste0(size_empty$Var1,size_empty$Var2),paste0(size_mat$Trap,size_mat$Taxa)),3]
size_mat = size_empty
colnames(size_mat)[1:3] = c("Trap","Taxa","Size")
gam_data<-data.frame(size_mat,Long=land$X,Lat=land$Y,Area=land[,"Area0100"])
gam_data
taxa_gam = gam_data
taxa_gam = na.omit(taxa_gam)
AICs<-lapply(1:20,function(y){
gam(Size~Area+s(Long, Lat,k=y),family = "quasipoisson",data = taxa_gam)->GAM_Size
return(AIC(GAM_Size))
})
taxa_gam
AICs<-lapply(1:20,function(y){
gam(Size~Area*Taxa+s(Long, Lat,k=y),family = "quasipoisson",data = taxa_gam)->GAM_Size
return(AIC(GAM_Size))
})
data.frame(k=1:20,AIC=unlist(AICs))->k_data
k_data[order(k_data$AIC),][1,]$k->temp_k
gam(Size~Area*Taxa+s(Long, Lat,k=temp_k),family = "quasipoisson",data = taxa_gam)->GAM_Size
summary(GAM_Size)
levels(taxa_gam$Taxa)
levels(taxa_gam$Taxa)=taxa_gam$Taxa[order(taxa_gam$Taxa)]
levels(taxa_gam$Taxa)
taxa_gam$Taxa[order(taxa_gam$Taxa)]
unique(taxa_gam$Taxa)[order(unique(taxa_gam$Taxa))]
taxa_gam = gam_data
taxa_gam = na.omit(taxa_gam)
unique(taxa_gam$Taxa)[order(unique(taxa_gam$Taxa))]
unique(taxa_gam$Taxa)
as.character(unique(taxa_gam$Taxa))
as.character(unique(taxa_gam$Taxa))[order(as.character(unique(taxa_gam$Taxa)))]
levels(taxa_gam) = as.character(unique(taxa_gam$Taxa))[order(as.character(unique(taxa_gam$Taxa)))]
AICs<-lapply(1:20,function(y){
gam(Size~Area*Taxa+s(Long, Lat,k=y),family = "quasipoisson",data = taxa_gam)->GAM_Size
return(AIC(GAM_Size))
})
data.frame(k=1:20,AIC=unlist(AICs))->k_data
k_data[order(k_data$AIC),][1,]$k->temp_k
gam(Size~Area*Taxa+s(Long, Lat,k=temp_k),family = "quasipoisson",data = taxa_gam)->GAM_Size
summary(GAM_Size)
levels(taxa_gam)
taxa_gam = gam_data
taxa_gam = na.omit(taxa_gam)
levels(taxa_gam$Taxa) = as.character(unique(taxa_gam$Taxa))[order(as.character(unique(taxa_gam$Taxa)))]
AICs<-lapply(1:20,function(y){
gam(Size~Area*Taxa+s(Long, Lat,k=y),family = "quasipoisson",data = taxa_gam)->GAM_Size
return(AIC(GAM_Size))
})
data.frame(k=1:20,AIC=unlist(AICs))->k_data
k_data[order(k_data$AIC),][1,]$k->temp_k
gam(Size~Area*Taxa+s(Long, Lat,k=temp_k),family = "quasipoisson",data = taxa_gam)->GAM_Size
summary(GAM_Size)
gam(Size~Area+Area:Taxa+s(Long, Lat,k=temp_k),family = "quasipoisson",data = taxa_gam)->GAM_Size
summary(GAM_Size)
gam(Size~Area+Area:Taxa+s(Long, Lat,k=temp_k),family = "gaussian",data = taxa_gam)->GAM_Size
summary(GAM_Size)
gam(Size~Area+Area:Taxa+s(Long, Lat,k=temp_k),family = "quasipoisson",data = taxa_gam)->GAM_Size
summary(GAM_Size)
glm(Size~Area+Area:Taxa+s(Long, Lat,k=temp_k),family = "quasipoisson",data = taxa_gam)->GAM_Size
glm(Size~Area+Area:Taxa,family = "quasipoisson",data = taxa_gam)->GAM_Size
summary(GAM_Size)
size_plt
SizeOrdPlt1<-ggplot()+
geom_point(data=size_plt,aes(x=Area,y=log10(Size),color=Taxa,fill=Taxa,shape=Taxa))+
geom_smooth(data=size_plt,aes(x=Area,y=log10(Size),color=Taxa),method = "glm",method.args=list(family="quasipoisson"))+
facet_wrap(.~Taxa,scales = "free_y")+
scale_color_manual(values=my_cols[-c(4,7)],labels=fantasy_names[-c(4,7)])+
scale_fill_manual(values=my_cols[-c(4,7)],labels=fantasy_names[-c(4,7)])+
scale_linetype(labels=fantasy_names[-c(4,7)])+
theme_minimal()+
#scale_y_continuous(labels = c(0,10,100),breaks = c(0,1,2))+
#guides(color="none",fill="none",color="none",shape="none")+
scale_shape_manual(values=c(21,22,23,24,25,8,13),labels=fantasy_names[-c(4,7)])+
labs(x="Proportion of forest",y="Area of the bounding box",color="Biological\ngroup",fill="Biological\ngroup",shape="Biological\ngroup",linetype="Biological\ngroup")+
theme(legend.justification = "top",strip.text = element_text(size=12,family="sans",face = "bold",hjust = 0,vjust = 0.5),strip.background = element_rect(fill="transparent",color="transparent"), legend.text.align = 0,legend.title.align=0,legend.position = "none", legend.background = element_rect(fill="NA", colour = "NA"), legend.title = element_text(face="bold", family = "sans", colour = "black", size=12), legend.text = element_text(family ="sans", size=10), axis.text = element_text(family = "sans", colour = "black", size=12), axis.title = element_text(face="bold",family = "sans", size = 14));SizeOrdPlt1
plot(GAM_Size)
?plot_model
??plot_model
library(sjPlot)
plot_model(GAM_Size, type = "pred", terms = "Area")
plot_model(GAM_Size, type = "pred", terms = "Area:Taxa")
summary(GAM_Size)
plot_model(GAM_Size, type = "pred", terms = "Area:TaxaTrichoptera")
plot_model(GAM_Size, type = "pred", terms = "Area:Trichoptera")
plot_model(GAM_Size, type = "pred", terms = "Area:TaxaTrichoptera")
GAM_Size
plot_model(GAM_Size, type = "pred")
?plot_model
plot_model(GAM_Size, type = "eff")
plot_model(GAM_Size, type = "slope", terms = "Taxa")
plot_model(GAM_Size, type = "slope", terms = "Area")
plot_model(GAM_Size, type = "pred", terms = "Area")
plot_model(GAM_Size, type = "pred", terms = c("Area","Taxa"))
summary(GAM_Size)
summary(GAM_Size)
residuals(GAM_Size)->size_res
size_res
size_ins = aggregate(size_res,list(taxa_gam$Taxa),mean)[,2]
size_ins
names(size_ins) = unique(insects$class)[order(unique(insects$class))]
K_result <- phylosig(tree.ins, size_ins, method = "lambda", test = TRUE,niter = 9999)
print(K_result)
taxa_gam = gam_data
taxa_gam = na.omit(taxa_gam)
levels(taxa_gam$Taxa) = as.character(unique(taxa_gam$Taxa))[order(as.character(unique(taxa_gam$Taxa)))]
AICs<-lapply(1:20,function(y){
gam(Size~Area*Taxa+s(Long, Lat,k=y),family = "quasipoisson",data = taxa_gam)->GAM_Size
return(AIC(GAM_Size))
})
data.frame(k=1:20,AIC=unlist(AICs))->k_data
k_data[order(k_data$AIC),][1,]$k->temp_k
glm(Size~Area+Area:Taxa,family = "quasipoisson",data = taxa_gam)->GAM_Size
summary(GAM_Size)
residuals(GAM_Size)->size_res
size_ins = aggregate(size_res,list(taxa_gam$Taxa),mean)[,2]
names(size_ins) = unique(insects$class)[order(unique(insects$class))]
K_result <- phylosig(tree.ins, size_ins, method = "lambda", test = TRUE,niter = 9999)
print(K_result)
glm(Size~Area+Taxa+Area:Taxa,family = "quasipoisson",data = taxa_gam)->GAM_Size
summary(GAM_Size)
residuals(GAM_Size)->size_res
size_ins = aggregate(size_res,list(taxa_gam$Taxa),mean)[,2]
names(size_ins) = unique(insects$class)[order(unique(insects$class))]
K_result <- phylosig(tree.ins, size_ins, method = "lambda", test = TRUE,niter = 9999)
print(K_result)
4.11389e-05
